#!/bin/sh
#
# Slackware build script for Mono
# Copyright (C) 2009-2016 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: mono.SlackBuild,v 1.14 2016/10/22 14:44:50 gsotirov Exp $
#

. ../../slack-package.conf

NAME=mono
VERSION=4.6.1
VERSION_FULL="$VERSION.5"
BUILD=${BUILD:-1}
ARCH=${ARCH:-i486}
if [ $ARCH == "i486" -o $ARCH == "i586" ]; then
  ARCH=i686 # fail to compile atomic.h for undefined references (see https://bugzilla.xamarin.com/show_bug.cgi?id=34316)
  ADD_CFLAGS="-march=$ARCH"
fi

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract the source
cd $TMP
tar -xvf $CWD/$NAME-$VERSION_FULL.tar.?z* || exit 3
cd $SRC
fix_source

# Apply patches
#patch -p1 < $CWD/$NAME-$VERSION.diff

# Configure
autoconf
CFLAGS="$SLKCFLAGS -O2 $ADD_CFLAGS" \
CXXFLAGS="$SLKCFLAGS -O2 $ADD_CFLAGS" \
./configure --build=$ARCH-slackware-linux \
            --host=$ARCH-slackware-linux \
            --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --mandir=/usr/man \
            --enable-shared=yes \
            --enable-static=yes || exit 4

# Build & install
make V=1 -j${NUMJOBS} || exit 5
#make validate || exit 4 # still fails with errors
make DESTDIR=$PKG install || exit 6

# Rename configuration files to avoid overwritte (if updated, do not 
# forget to update doinst.sh file as well)
mv $PKG/etc/mono/config             $PKG/etc/mono/config.new
mv $PKG/etc/mono/browscap.ini       $PKG/etc/mono/browscap.ini.new
mv $PKG/etc/mono/mconfig/config.xml $PKG/etc/mono/mconfig/config.xml.new
mv $PKG/etc/mono/2.0/settings.map   $PKG/etc/mono/2.0/settings.map.new
mv $PKG/etc/mono/2.0/machine.config $PKG/etc/mono/2.0/machine.config.new
mv $PKG/etc/mono/2.0/web.config     $PKG/etc/mono/2.0/web.config.new
mv $PKG/etc/mono/2.0/Browsers/Compat.browser \
                                    $PKG/etc/mono/2.0/Browsers/Compat.browser.new
mv $PKG/etc/mono/2.0/DefaultWsdlHelpGenerator.aspx \
                                    $PKG/etc/mono/2.0/DefaultWsdlHelpGenerator.aspx.new
mv $PKG/etc/mono/4.0/Browsers/Compat.browser \
                                    $PKG/etc/mono/4.0/Browsers/Compat.browser.new
mv $PKG/etc/mono/4.0/DefaultWsdlHelpGenerator.aspx \
                                    $PKG/etc/mono/4.0/DefaultWsdlHelpGenerator.aspx.new
mv $PKG/etc/mono/4.0/machine.config $PKG/etc/mono/4.0/machine.config.new
mv $PKG/etc/mono/4.0/settings.map   $PKG/etc/mono/4.0/settings.map.new
mv $PKG/etc/mono/4.0/web.config     $PKG/etc/mono/4.0/web.config.new
mv $PKG/etc/mono/4.5/Browsers/Compat.browser \
                                    $PKG/etc/mono/4.5/Browsers/Compat.browser.new
mv $PKG/etc/mono/4.5/DefaultWsdlHelpGenerator.aspx \
                                    $PKG/etc/mono/4.5/DefaultWsdlHelpGenerator.aspx.new
mv $PKG/etc/mono/4.5/machine.config $PKG/etc/mono/4.5/machine.config.new
mv $PKG/etc/mono/4.5/settings.map   $PKG/etc/mono/4.5/settings.map.new
mv $PKG/etc/mono/4.5/web.config     $PKG/etc/mono/4.5/web.config.new

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
( cd $SRC; create_docs $PKG $NAME-$VERSION_FULL )
gzip_man $PKG

mkdir -p $PKG/install
install -m 644 $CWD/doinst.sh      $PKG/install/doinst.sh
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/slack-suggests $PKG/install/slack-suggests

SB_DIR=$PKG/usr/src/slackbuilds/$NAME-$VERSION_FULL
mkdir -p $SB_DIR
install -m 644 $CWD/doinst.sh        $SB_DIR/doinst.sh
install -m 644 $CWD/slack-desc       $SB_DIR/slack-desc
install -m 644 $CWD/slack-required   $SB_DIR/slack-required
install -m 644 $CWD/slack-suggests   $SB_DIR/slack-suggests
install -m 644 $CWD/$NAME.SlackBuild $SB_DIR/$NAME.SlackBuild

# Pack
cd $PKG
PKGNAME=$NAME-$VERSION_FULL-$ARCH-$BUILD$MYIN
makepkg -l y -c n -p $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
  rm -rf $SRC
  rm -rf $PKG
fi

